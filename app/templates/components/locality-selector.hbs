<div class="col-xs-12 {{if displayMap 'hidden'}}">
    {{action-label
        text='component.locality-selector.create-new'
        label='fields.labels.collecting_place'
        action=(action this.attrs.enableCreate)
    }}
    {{#solr-autocomplete-input
        storeName='locality'
        displayField='localityName'
        entityType='locality'

        multiSelect=multiSelect

        itemSelected=(action this.attrs.update)
        filterKeys='disciplineID'

        item=selectedLocality
        class='rich'

        as |autocompleteInput|
    }}
        {{#autocompleteInput.inline}}
            <a class="btn btn-primary btn-xs clickable" {{action 'toggleMap'}}>
                {{t 'component.locality-selector.show-map'}}
            </a>
        {{/autocompleteInput.inline}}
        {{#autocompleteInput.dropdown as |dropdownItem|}}
            <i class='row-icon glyphicon glyphicon-map-marker {{unless dropdownItem.latitude 'inactive'}}'></i>
            <p class='regular-row light'>{{dropdownItem.geography.displayName}}</p>
            <p class='regular-row {{if dropdownItem.latitude 'shrink'}}'>{{dropdownItem.localityName}}</p>
            {{#if dropdownItem.latitude}}
                <p class='regular-row right hidden-xs'>
                    <i class="glyphicon glyphicon-map-marker"></i>{{dropdownItem.location}}
                </p>
            {{/if}}
            <p class='timestamp hidden-xs'>
                {{t
                    'component.locality-selector.created-by'
                    date=(moment-format dropdownItem.timestampCreated 'LL')
                    name=dropdownItem.agent.fullName
                }}
            </p>
        {{/autocompleteInput.dropdown}}
    {{/solr-autocomplete-input}}
</div>
{{#if item}}
    <div class='col-xs-12 preview {{if displayMap 'hidden'}}'>
        <div class='row'>
            {{#if item.latitude}}
                <div class='col-xs-5'>
                    {{#map-view
                        center=item.location
                        zoom=zoom
                        onZoom=(action (mut mapZoom))
                    }}
                        {{#circle-marker-layer
                            location=item.location
                            popupOpen=(readonly true)

                            color="#FF0000"
                            radius=(metersToPixels item.uncertaintyRadius mapZoom)
                        }}
                            <p>
                                <strong>{{item.localityName}}</strong>
                                <br>{{locality.geography.displayName}}
                            </p>
                        {{/circle-marker-layer}}
                    {{/map-view}}
                </div>
            {{/if}}
            <div class='col-xs-6'>
                {{attributes-list
                    model=item attributes=configuration.preview.attributes
                }}
            </div>
        </div>
    </div>
{{/if}}
{{#if displayMap}}
    <div class='col-xs-12'>
        {{action-label
            text='component.locality-selector.hide-map'
            label='fields.labels.collecting_place'
            action=(action 'toggleMap')
        }}
    </div>
    <div class="col-xs-8 col-md-8">
        {{#map-view
            center=geography.centroid
            zoom=zoom
            onZoom=(action (mut pickMapZoom))
            boundsUpdate=(action (mut bounds)) as |map|
        }}
            {{#unless maximumReached}}
                {{#each localities as |locality|}}
                    {{#if locality.latitude}}
                        {{#circle-marker-layer
                            location=locality.location
                            radius=(
                                if locality.hover (
                                        metersToPixels locality.uncertaintyRadius pickMapZoom
                                    ) (if locality.isOpen (
                                        metersToPixels locality.uncertaintyRadius pickMapZoom
                                    ) 5)
                            )
                            opacity=(
                                if locality.isOpen 1 (
                                    if locality.hover 1 0.6
                                )
                            )

                            popupOpen=locality.isOpen

                            color=(
                                if locality.isOpen '#bd0026' (
                                    if locality.hover '#bd0026' '#027cb1'
                                )
                            )

                            onMouseover=(action 'hover' locality true)
                            onMouseout=(action 'hover' locality false)
                        }}
                            <p>
                                <strong>{{locality.localityName}}</strong>
                                <br>{{locality.geography.displayName}}
                            </p>
                            <a
                                class="btn btn-default btn-xs"
                                {{action 'select' locality on='click'}}
                            >
                                    {{t 'definitions.use'}}
                            </a>
                        {{/circle-marker-layer}}
                    {{/if}}
                {{/each}}
            {{/unless}}
        {{/map-view}}
    </div>
    <div class="col-xs-4 col-md-4">
        {{#solr-autocomplete-input
            storeName='geography'
            displayField='displayName'
            entityType='geography'
            sortBy='rankID'
            filterKeys='disciplineID'

            placeholder='component.locality-selector.search-geography'

            itemSelected=(action 'geographySelected')

            class='rich'

            as |autocompleteInput|
        }}
            {{autocompleteInput.inline class='hidden-xs hidden-sm hidden-md'}}
            {{#autocompleteInput.dropdown as |dropdownItem|}}
                <i class='row-icon small glyphicon glyphicon-map-marker {{unless dropdownItem.validCentroid 'inactive'}}'></i>
                <p class='regular-row'>
                    {{make-bold dropdownItem.displayName match=dropdownItem.name}}
                </p>
            {{/autocompleteInput.dropdown}}
        {{/solr-autocomplete-input}}
        <h4>
            {{t 'definitions.collecting-place' count=2}}, {{if maximumReached '+' ''}}{{localities.length}}{{t 'definitions.count'}}
        </h4>
        {{#if maximumReached}}
            <p>{{t 'component.locality-selector.to-many-results'}}</p>
        {{else}}
            <div class="list-group">
                {{#each localities as |locality|}}
                    <a
                        class="list-group-item clickable {{if locality.hover 'hover'}}"
                        {{action 'open' locality on='click'}}
                        {{action 'hover' locality true on='mouseEnter'}}
                        {{action 'hover' locality false on='mouseLeave'}}
                    >
                        <p class="list-group-item-text list-header">
                            <strong>{{locality.localityName}}</strong>
                        </p>
                        <p class="list-group-item-text">
                            {{locality.geography.fullName}}
                        </p>
                    </a>
                {{/each}}
            </div>
        {{/if}}
    </div>
{{/if}}